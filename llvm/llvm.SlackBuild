#!/bin/bash
#
# Copyright 2021
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
#
# -----------------------------------------------------------------------------
#
# Slackware SlackBuild script 
# ===========================
# By:              Minime <slackinfo[at]slackwarelinux[dot]se>
# For:             llvm/clang
# Descr:           Open Source version of llvm/clang
# URL:             http://www.chromium.org/
# Build needs:     - ninja;
#                  - gcc >= 8
#                  - nasm >= 2.14 (yasm no longer being used);
#                  - cmake >= 3.13.4;
#                  - python3 >= 3.7, python3-setuptools;
#
#######################################################################

PRGNAM=llvm
GIT_REV=llvmorg-12.0.1
VERSION=${VERSION:-12.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SLse}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SLse}
PKG=$TMP/package-$PRGNAM
PKGPATH=/opt/$PRGNAM
LLVMBUILD=$TMP/$PRGNAM-build
LLVMSRC=${PRGNAM}-project-${GIT_REV}
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

if [[ $ARCH =~ arm.* ]]; then
  TARGET=${ARCH}-slackware-linux-gnueabihf
else
  TARGET=${ARCH}-slackware-linux-gnu
fi

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG $LLVMBUILD $TMP/$LLVMSRC
mkdir -p $TMP $PKG $LLVMBUILD $OUTPUT 

cd $TMP
rm -rf ${PRGNAM}-${GIT_REV}

# --- PACKAGE BUILDING ---

if [ -f ${CWD}/${GIT_REV}.tar.gz ]; then
  echo "++"
  echo "|| File in chache..."
  echo "++"
else
  echo "++"
  echo "|| $PRGNAM-$GIT_REV"
  echo "|| Downloading ${PRGNAM} ${VERSION}"
  echo "++"

  wget https://github.com/llvm/llvm-project/archive/refs/tags/${GIT_REV}.tar.gz -P $CWD
fi

echo "++"
echo "|| Unpacking..."
echo "++"

tar xf $CWD/${GIT_REV}.tar.gz

echo "++"
echo "|| Unpacking done."
echo "++"

cd $LLVMSRC

# Support GCC built for arm-slackware-linux and  i586-slackware-linux:
zcat $CWD/clang.toolchains.arm_i586.triple.diff.gz | patch -p1 --verbose || exit 1

cd ../${PRGNAM}-build

echo "++"
echo "|| Building"
echo "++"

cmake -DCMAKE_BUILD_TYPE=Release \
      -DLLVM_ENABLE_ASSERTIONS=OFF \
      -DLLVM_TARGETS_TO_BUILD="ARM;X86;AArch64" \
      -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" \
      -DLLVM_DEFAULT_TARGET_TRIPLE=$TARGET \
      -DCMAKE_INSTALL_PREFIX=${PKGPATH} \
      -DLLVM_LIBDIR_SUFFIX=${LIBDIRSUFFIX} \
      -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
      -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
      ../$LLVMSRC/${PRGNAM} \
      -G Ninja 2>&1 | tee -a ${OUTPUT}/cmake-${PRGNAM}.log

echo "++"
echo "|| Build done"
echo "|| Start compiling"
echo "++"

ninja 2>&1 | tee -a ${OUTPUT}/ninja-${PRGNAM}.log

echo "++"
echo "|| Compiling Compleate"
echo "|| Start install"
echo "++"

DESTDIR=$PKG ninja install  2>&1 | tee -a ${OUTPUT}/ninja_install-${PRGNAM}.log

echo "++"
echo "|| Install Compleate"
echo "++"

cd ..
# Add symlinks for $ARCH-slackware-linux-{clang,clang++}:
( cd $PKG${PKGPATH}/bin
  ln -sf clang $ARCH-slackware-linux-clang
  ln -sf clang++ $ARCH-slackware-linux-clang++
)

# Remove man page directory:
rm -rf $PKG${PKGPATH}/share/man

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

cd $TMP/$LLVMSRC
mkdir -p $PKG${PKGPATH}/doc/$PRGNAM-$VERSION/{llvm,clang,lld,clang-tools-extra,openmp}
cp -a llvm/{CODE_OWNERS,CREDITS,LICENSE,README,RELEASE_TESTERS}* \
  $PKG${PKGPATH}/doc/$PRGNAM-$VERSION/llvm
cp -a clang/{CODE_OWNERS,INSTALL,LICENSE,NOTES,README}* \
  $PKG${PKGPATH}/doc/$PRGNAM-$VERSION/clang
cp -a clang-tools-extra/{CODE_OWNERS,LICENSE,README}* \
  $PKG${PKGPATH}/doc/$PRGNAM-$VERSION/clang-tools-extra
cp -a lld/{CODE_OWNERS,LICENSE}* \
  $PKG${PKGPATH}/doc/$PRGNAM-$VERSION/lld
cp -a openmp/{CREDITS,LICENSE}* \
  $PKG/opt/llvm/doc/$PRGNAM-$VERSION/openmp

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
