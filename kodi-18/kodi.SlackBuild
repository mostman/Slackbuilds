#!/bin/sh

# Slackware build script for kodi 18.9

# Copyright 2020-2021 Minime <slackwareinfo[at]slackwarelinux[dot]se>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=kodi
SRCNAM=xbmc
CODNAM=Leia
VERSION=${VERSION:-18.9}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
ADDPKG=$TMP/package-$PRGNAM-addons
KODIBUILD=$TMP/$PRGNAM-build
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $ADDPKG $PKG $KODIBUILD
mkdir -p $TMP $PKG $ADDPKG $KODIBUILD $OUTPUT

# Fix missing lib folder-path 18.8
mkdir -p $PKG/usr/lib/$PRGNAM/addons

cd $TMP
rm -rf $SRCNAM-$VERSION-$CODNAM

# Download source from git directly
# As there seams to be issues with the tarballs wne trying to compile addons
#tar xvf $CWD/$SRCNAM-$VERSION-$CODNAM.tar.gz
git clone -b $CODNAM https://github.com/xbmc/xbmc $SRCNAM-$VERSION-$CODNAM
cd $SRCNAM-$VERSION-$CODNAM

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# The version of ffmpeg on SBo is too old to compile kodi.
# Optional ffmpeg is still available but not turned off by default.
# Note: If compiling without kodis own ffmpeg or using
# Slackware-Currents own ffmpeg
# kodi will not build all addons
if [ "${FFMPEG:-yes}" == "yes" ]; then
  OPT_FFMPEG="ON"
else
  OPT_FFMPEG="OFF"
fi

# Build webserver. Requires libmicrohttpd.
if [ "${WEBSERVER:-yes}" == "yes" ]; then
  OPT_WEB="ON"
else
  OPT_WEB="OFF"
fi

# Wii controller usage. Default is no.
if ! [ "${WII:-yes}" == "no" ]; then
  OPT_WII="ON"
else
  OPT_WII="OFF"
fi

cd $KODIBUILD

# Compile and create pkg
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \

cmake ../$SRCNAM-$VERSION-$CODNAM \
   -DCMAKE_INSTALL_PREFIX=/usr \
   -DCMAKE_INSTALL_LIBDIR=/usr/lib$LIBDIRSUFFIX \
   -DENABLE_EVENTCLIENTS=$OPT_WII \
   -DENABLE_INTERNAL_FFMPEG=$OPT_FFMPEG \
   -DENABLE_INTERNAL_FSTRCMP=ON \
   -DENABLE_INTERNAL_CROSSGUID=ON \
   -DENABLE_INTERNAL_FLATBUFFERS=ON \
   -DENABLE_INTERNAL_FMT=ON \
   -DENABLE_MICROHTTPD=$OPT_WEB \
   -DENABLE_AVAHI=OFF \
   -DENABLE_VAAPI=ON \
   -DENABLE_VDPAU=ON

cmake ../$SRCNAM-$VERSION-$CODNAM -DCMAKE_INSTALL_PREFIX=/usr
cmake --build . -- VERBOSE=1 -j$(getconf _NPROCESSORS_ONLN)
cd $KODIBUILD
make install DESTDIR=$PKG

# Compile and install the addons
cd ../$SRCNAM-$VERSION-$CODNAM

# Compile only inputstream.adaptive addon
#make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons PREFIX=$ADDPKG/usr ADDONS="inputstream.adaptive"

# Compile inputstream.adaptive and pvr.vuplus addon
#make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons PREFIX=$ADDPKG/usr ADDONS="inputstream.adaptive pvr.vuplus"

# Compile all addons
make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons PREFIX=$ADDPKG/usr

# Fix addons path 64-bit system
if [ "$LIBDIRSUFFIX" = "64" ]; then
  mkdir -p $ADDPKG/usr/lib$LIBDIRSUFFIX/$PRGNAM
  mv $PKG/usr/lib/$PRGNAM/addons $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM
  mv $ADDPKG/usr/lib/$PRGNAM/addons $ADDPKG/usr/lib$LIBDIRSUFFIX/$PRGNAM
  rm -rf $PKG/usr/lib/$PRGNAM
  rm -rf $ADDPKG/usr/lib/$PRGNAM
fi

# Install manpages.
mkdir -p $PKG/usr/man/man1
for i in $PRGNAM.bin.1 $PRGNAM.1 $PRGNAM-standalone.1; do
  install -m 0644 docs/manpages/$i $PKG/usr/man/man1/$i
done

gzip -9 $PKG/usr/man/man?/*.?

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a tools/EventClients/README.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}

cd $ADDPKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-addons-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
